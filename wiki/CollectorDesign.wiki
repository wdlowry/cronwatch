#summary Design of the cronwatch collector script
#labels Phase-Design,Collector

= Command Line Parameters =
 * -d
  * Specifies the remote directory on the target upload server
  * Default: use the default directory (usually the home directory of the remote user)
 * -h
  * Usage
 * -q
  * Specifies the queue directory that the wrapper script put files into
  * Default: `/var/lib/cronwatch/wrapper`
 * -t
  * Test the scp connection using the parameters given

= Command Line Arguments =
 * username
  * Remote username
  * Note: ssh uses the local username as the default for the remote username, but it would be better to force the user to supply a username so as to avoid confusion.
 * host
  * Remote host

= Process =
 # Read and handle command line parameters
 # Read and handle command line arguments
 # Test the connection and exit, if -t is specified
 # Generate a (hopefully) unique prefix (hostname_PID_)
 # For each directory in the queue directory
  # If a lock file exists, skip this directory
  # Copy the directory to the target directory
  # Create a "transfer complete" file and copy it to the target server
  # On successful completion of the copy, delete the local directory and "transfer complete" file
 # Exit