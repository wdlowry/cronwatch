#summary Design of the cronwatch processor
#labels Phase-Design,Processor

= Command Line Parameters =
 * -c
  * Global configuration file

= Configuration File Directives =
 * main
  * queuedir
   * Global only
   * Directory where the collector puts stuff
   * Default: /var/lib/cronwatch/collector
  * outputdir
   * Global only
   * Directory where the processor stores it's finished output files
   * Default: /var/lib/cronwatch/reports
 * templates
   * templatedir
     * Global only
     * Directory where the templates are stored
     * Default: /var/lib/cronwatch/template
 * jobdefaults
   * 

= Phase 1 Class Design =

== Config ==
=== Properties ===

== ConfigSection ==
ConfigSection is actually part of Config, but it's split out here for easier formatting.

=== Properties ===
 * __settings
  * List of dictionaries with settings

=== Methods ===
 * add_setting
  * Add a possible configurable setting
  * Parameters
   * name: non-empty string containing the name of the setting
   * type: one of 'string', 'int', 'float', 'boolean', 'list' (defaults to 'string')
   * default: default value (defaults to None)
  * Exceptions
   * Throws Exception if the setting already exists
   * Throws an Exception if the setting type is invalid
 * set
  * Set a configurable setting
  * Parameters
   * name: name of setting
   * val: new value of setting
  * Exceptions
   * Throws Exception if the setting does not exist
 * get
  * Get a configurable setting
  * Parameters
   * name: name of the setting
  * Returns the value of the specified setting
  * Exceptions
   * Throws Exception if the setting does not exist
 * Note: get and set are bound to __getattr__ and __setattr__
 * get_type
  * Get the type of a setting
  * Parameters
   * name: name of the setting
  * 
 